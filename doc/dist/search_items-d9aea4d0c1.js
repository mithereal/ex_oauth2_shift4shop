searchNodes=[{"doc":"Ameritrade Strategy for Überauth.","ref":"Ueberauth.Strategy.Ameritrade.html","title":"Ueberauth.Strategy.Ameritrade","type":"module"},{"doc":"Includes the credentials from the Ameritrade response.","ref":"Ueberauth.Strategy.Ameritrade.html#credentials/1","title":"Ueberauth.Strategy.Ameritrade.credentials/1","type":"function"},{"doc":"Callback implementation for Ueberauth.Strategy.default_options/0 .","ref":"Ueberauth.Strategy.Ameritrade.html#default_options/0","title":"Ueberauth.Strategy.Ameritrade.default_options/0","type":"function"},{"doc":"Stores the raw information (the token and user) obtained from the Ameritrade callback.","ref":"Ueberauth.Strategy.Ameritrade.html#extra/1","title":"Ueberauth.Strategy.Ameritrade.extra/1","type":"function"},{"doc":"Handles initial request for Ameritrade authentication.","ref":"Ueberauth.Strategy.Ameritrade.html#handle_request!/1","title":"Ueberauth.Strategy.Ameritrade.handle_request!/1","type":"function"},{"doc":"Fetches the fields to populate the info section of the Ueberauth.Auth struct.","ref":"Ueberauth.Strategy.Ameritrade.html#info/1","title":"Ueberauth.Strategy.Ameritrade.info/1","type":"function"},{"doc":"Fetches the uid field from the response.","ref":"Ueberauth.Strategy.Ameritrade.html#uid/1","title":"Ueberauth.Strategy.Ameritrade.uid/1","type":"function"},{"doc":"","ref":"Ueberauth.Strategy.Ameritrade.OAuth.html","title":"Ueberauth.Strategy.Ameritrade.OAuth","type":"module"},{"doc":"Provides the authorize url for the request phase of Ueberauth. No need to call this usually.","ref":"Ueberauth.Strategy.Ameritrade.OAuth.html#authorize_url!/2","title":"Ueberauth.Strategy.Ameritrade.OAuth.authorize_url!/2","type":"function"},{"doc":"Callback implementation for OAuth2.Strategy.authorize_url/2 .","ref":"Ueberauth.Strategy.Ameritrade.OAuth.html#authorize_url/2","title":"Ueberauth.Strategy.Ameritrade.OAuth.authorize_url/2","type":"function"},{"doc":"","ref":"Ueberauth.Strategy.Ameritrade.OAuth.html#client/1","title":"Ueberauth.Strategy.Ameritrade.OAuth.client/1","type":"function"},{"doc":"","ref":"Ueberauth.Strategy.Ameritrade.OAuth.html#get/4","title":"Ueberauth.Strategy.Ameritrade.OAuth.get/4","type":"function"},{"doc":"","ref":"Ueberauth.Strategy.Ameritrade.OAuth.html#get_token!/2","title":"Ueberauth.Strategy.Ameritrade.OAuth.get_token!/2","type":"function"},{"doc":"Callback implementation for OAuth2.Strategy.get_token/3 .","ref":"Ueberauth.Strategy.Ameritrade.OAuth.html#get_token/3","title":"Ueberauth.Strategy.Ameritrade.OAuth.get_token/3","type":"function"},{"doc":"Überauth Ameritrade Ameritrade OAuth2 strategy for Überauth.","ref":"readme.html","title":"README","type":"extras"},{"doc":"Setup your application at Ameritrade Developers . Add :ueberauth_ameritrade to your list of dependencies in mix.exs : def deps do [ { :ueberauth_ameritrade , &quot;~&gt; 1.0.0&quot; } ] end Add the strategy to your applications: def application do [ applications : [ :ueberauth_ameritrade ] ] end Add Ameritrade to your Überauth configuration: config :ueberauth , Ueberauth , providers : [ ameritrade : { Ueberauth.Strategy.Ameritrade , [ ] } ] Update your provider configuration: config :ueberauth , Ueberauth.Strategy.Ameritrade.OAuth , client_id : System . get_env ( &quot;AMERITRADE_KEY&quot; ) Include the Überauth plug in your controller: defmodule MyApp.AuthController do use MyApp.Web , :controller plug Ueberauth ... end Create the request and callback routes if you haven't already: scope &quot;/auth&quot; , MyApp do pipe_through :browser get &quot;/:provider&quot; , AuthController , :request get &quot;/:provider/callback&quot; , AuthController , :callback end And make sure to set the correct redirect URI(s) in your Ameritrade application to wire up the callback. Your controller needs to implement callbacks to deal with Ueberauth.Auth and Ueberauth.Failure responses. For an example implementation see the Überauth Example application.","ref":"readme.html#installation","title":"README - Installation","type":"extras"},{"doc":"Depending on the configured url you can initialize the request through: / auth / td You must use something other than Ameritrade in the callback routes, I use /auth/td see below: config :ueberauth , Ueberauth , providers : [ ameritrade : { Ueberauth.Strategy.Ameritrade , [ request_path : &quot;/auth/td&quot; , callback_path : &quot;/auth/td/callback&quot; ] } ]","ref":"readme.html#calling","title":"README - Calling","type":"extras"},{"doc":"Please see LICENSE for licensing details.","ref":"readme.html#license","title":"README - License","type":"extras"}]